/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  MyBackdrop as MyBackdrop
} from './components/my-backdrop/my-backdrop';

declare global {
  interface HTMLMyBackdropElement extends MyBackdrop, HTMLElement {
  }
  var HTMLMyBackdropElement: {
    prototype: HTMLMyBackdropElement;
    new (): HTMLMyBackdropElement;
  };
  interface HTMLElementTagNameMap {
    "my-backdrop": HTMLMyBackdropElement;
  }
  interface ElementTagNameMap {
    "my-backdrop": HTMLMyBackdropElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-backdrop": JSXElements.MyBackdropAttributes;
    }
  }
  namespace JSXElements {
    export interface MyBackdropAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyModalBundle as MyModalBundle
} from './components/my-modal-bundle/my-modal-bundle';

declare global {
  interface HTMLMyModalBundleElement extends MyModalBundle, HTMLElement {
  }
  var HTMLMyModalBundleElement: {
    prototype: HTMLMyModalBundleElement;
    new (): HTMLMyModalBundleElement;
  };
  interface HTMLElementTagNameMap {
    "my-modal-bundle": HTMLMyModalBundleElement;
  }
  interface ElementTagNameMap {
    "my-modal-bundle": HTMLMyModalBundleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-modal-bundle": JSXElements.MyModalBundleAttributes;
    }
  }
  namespace JSXElements {
    export interface MyModalBundleAttributes extends HTMLAttributes {
      
        title?: string,
        content?: string
    }
  }
}


import {
  MyModal as MyModal
} from './components/my-modal/my-modal';

declare global {
  interface HTMLMyModalElement extends MyModal, HTMLElement {
  }
  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };
  interface HTMLElementTagNameMap {
    "my-modal": HTMLMyModalElement;
  }
  interface ElementTagNameMap {
    "my-modal": HTMLMyModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-modal": JSXElements.MyModalAttributes;
    }
  }
  namespace JSXElements {
    export interface MyModalAttributes extends HTMLAttributes {
      
        title?: string,
        content?: string
    }
  }
}

